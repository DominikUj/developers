# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PaginationInfo {
  """Total number of items"""
  totalCount: Int!

  """Number of items returned in this response"""
  count: Int!

  """Current offset"""
  offset: Int!

  """Current limit"""
  limit: Int!

  """Whether there are more items available"""
  hasMore: Boolean!
}

type Example {
  id: ID!
  createdAtUtc: DateTime!
  updatedAtUtc: DateTime
  deleteDateUtc: DateTime
  version: Int!
  name: String!
  value: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ExchangeRate {
  id: ID!
  createdAtUtc: DateTime!
  updatedAtUtc: DateTime
  deleteDateUtc: DateTime
  version: Int!
  country: String!
  currency: String!
  amount: Int!
  currencyCode: String!
  rate: Float!
  validFor: DateTime!
  fetchedAt: DateTime!
  language: Locale!
}

"""Supported languages for exchange rates"""
enum Locale {
  EN
  CS
}

type PaginatedExchangeRatesResponse {
  """List of items"""
  items: [ExchangeRate!]!

  """Pagination information"""
  pagination: PaginationInfo!
}

type Query {
  exampleByName(name: String!): Example
  paginatedExchangeRates(pagination: PaginationInput, locale: Locale): PaginatedExchangeRatesResponse!
}

input PaginationInput {
  """Number of items to return (max 100)"""
  limit: Int = 10

  """Number of items to skip"""
  offset: Int = 0
}

type Mutation {
  createExample(data: CreateExampleInputType!): Example!
}

input CreateExampleInputType {
  name: String!
  value: String!
}